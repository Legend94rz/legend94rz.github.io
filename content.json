{"meta":{"title":"One Blog","subtitle":"","description":"行百里者半九十","author":"Legend94rz","url":"https://legend94rz.github.io","root":"/"},"pages":[{"title":"About","date":"2020-02-27T09:12:54.000Z","updated":"2020-03-16T08:28:53.008Z","comments":true,"path":"about/index.html","permalink":"https://legend94rz.github.io/about/index.html","excerpt":"","text":"postgraduate student from SEU. email: legend94rz@gmail.com"},{"title":"categories","date":"2020-03-16T08:28:28.000Z","updated":"2020-03-16T08:28:38.566Z","comments":true,"path":"categories/index.html","permalink":"https://legend94rz.github.io/categories/index.html","excerpt":"","text":""},{"title":"contact","date":"2020-03-16T08:29:02.000Z","updated":"2020-03-16T08:29:09.117Z","comments":true,"path":"contact/index.html","permalink":"https://legend94rz.github.io/contact/index.html","excerpt":"","text":""},{"title":"archives","date":"2020-03-16T09:46:54.000Z","updated":"2020-03-16T09:47:52.320Z","comments":true,"path":"archives/index.html","permalink":"https://legend94rz.github.io/archives/index.html","excerpt":"","text":"归档"},{"title":"tags","date":"2020-03-16T08:28:05.000Z","updated":"2020-03-16T08:28:19.360Z","comments":true,"path":"tags/index.html","permalink":"https://legend94rz.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"矩阵增量式求逆","slug":"矩阵增量式求逆","date":"2020-03-15T04:11:42.000Z","updated":"2020-03-16T10:33:19.041Z","comments":true,"path":"2020/03/15/ju-zhen-zeng-liang-shi-qiu-ni/","link":"","permalink":"https://legend94rz.github.io/2020/03/15/ju-zhen-zeng-liang-shi-qiu-ni/","excerpt":"","text":"动机 \\[ \\left[ \\begin{array}{cc} A &amp; B \\newline C &amp; D \\newline \\end{array} \\right] = \\left[ \\begin{array}{cc} A &amp; B \\newline C &amp; D \\newline \\end{array} \\right] \\] \\[ \\begin{aligned} \\dot{x} &amp; = \\sigma(y-x) \\\\ \\dot{y} &amp; = \\rho x - y - xz \\\\ \\dot{z} &amp; = -\\beta z + xy \\end{aligned} \\] 背景知识 如何做 参考文献 https://www.zhihu.com/question/47760591 1814-incremental-and-decremental-support-vector-machine-learning http://www.cs.ubbcluj.ro/~csatol/SOGP/thesis/Iterative_computation.html","categories":[],"tags":[{"name":"math","slug":"math","permalink":"https://legend94rz.github.io/tags/math/"}]},{"title":"Python的GIL","slug":"Python的GIL","date":"2020-03-15T04:10:29.000Z","updated":"2020-03-16T10:10:11.467Z","comments":true,"path":"2020/03/15/python-de-gil/","link":"","permalink":"https://legend94rz.github.io/2020/03/15/python-de-gil/","excerpt":"GIL全称Python Global Interpreter Lock，全局解释器锁。 GIL解决的问题 为了维护 python 变量的引用计数，该引用计数将用于垃圾收集。 同一进程内，多个解释器同时更新引用计数将产生竞争条件（race condition）。 在执行python字节码时需要保证线程安全。","text":"GIL全称Python Global Interpreter Lock，全局解释器锁。 GIL解决的问题 为了维护 python 变量的引用计数，该引用计数将用于垃圾收集。 同一进程内，多个解释器同时更新引用计数将产生竞争条件（race condition）。 在执行python字节码时需要保证线程安全。 为何选择GIL作为解决方案 在操作系统还没有线程概念的时候，Python就已经出现了； 能提供线程安全的内存管理（垃圾收集）； 易于实现，是python早期的设计者们所采用的解决复杂问题的简单方法。 GIL带来的问题 GIL的直接结果就是一个python进程只有一个解释器，从而导致一个python进程的多线程部分只能有一个解释器真正在执行。 对于CPU密集型任务，无法利用多核进行计算加速。 如何避免 使用多进程而不是多线程。即：使用multiprocessing库而不是自带的threading。前者启的是进程，后者启的是线程。 换用其他的py解释器。IronPython没有GIL。 参考 https://realpython.com/python-gil/","categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://legend94rz.github.io/tags/python/"}]}]}